variables:
  # Default image for common jobs
  PHOSH_DOCKER_IMAGE: debian:trixie
  # For package builds
  PHOSH_PKG_GIT_SUBMODULE_UPDATE: 'true'
  PHOSH_PKG_OUTPUT_DIR: debian/output/

.phosh-prepare-apt: |
   echo "man-db man-db/auto-update boolean false" | debconf-set-selections
   export DEBIAN_FRONTEND=noninteractive
   apt-get -y update
   apt-get -y install eatmydata ${PHOSH_ADDITIONAL_PKGS}

.phosh-build-debian-package:
  image: ${PHOSH_DOCKER_IMAGE}
  needs: []
  script:
    # setup
    - !reference [.phosh-prepare-apt]
    - eatmydata apt-get -y --no-install-recommends install build-essential git devscripts
    - eatmydata apt-get -y --no-install-recommends build-dep .
    - rm -f ../* || true
    # run
    - '[ "$PHOSH_PKG_GIT_SUBMODULE_UPDATE" != "true" ] || git submodule update --recursive'
    - REV=$(git log -1 --format=%h)
    - VER=$(dpkg-parsechangelog -SVersion)
    - '[ -n "$CI_MERGE_REQUEST_TITLE" ] && MSG="Build of \"$CI_MERGE_REQUEST_TITLE\" at $REV" || MSG="Build of $REV"'
    - 'DEBFULLNAME="CI build" EMAIL="ci-builds@phosh.mobi" dch -v"$VER+librem5ci$CI_PIPELINE_ID.$REV" "$MSG"'
    - dpkg-buildpackage -b -uc -us
    - rm -rf "${PHOSH_PKG_OUTPUT_DIR}"; mkdir -p "${PHOSH_PKG_OUTPUT_DIR}"
    - cp -l ../*.changes ../*.buildinfo "${PHOSH_PKG_OUTPUT_DIR}/"
    - cp -l ../*.deb  "${PHOSH_PKG_OUTPUT_DIR}/" || true
    - cp -l ../*.udeb "${PHOSH_PKG_OUTPUT_DIR}/" || true
    - ls "${PHOSH_PKG_OUTPUT_DIR}/"/*.*deb
  artifacts:
    expose_as: 'Debian packages'
    paths:
      - debian/output/

.phosh-check-po:
  image: ${PHOSH_DOCKER_IMAGE}
  variables:
    PHOSH_ADDITIONAL_PKGS: intltool gettext
  needs: []
  script:
    - !reference [.phosh-prepare-apt]
    - .gitlab-ci/check-po

.phosh-check-consistency:
  image: ${PHOSH_DOCKER_IMAGE}
  variables:
    PHOSH_ADDITIONAL_PKGS: dpkg-dev
  needs: []
  script:
    - !reference [.phosh-prepare-apt]
    - .gitlab-ci/check-consistency
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        paths:
          - NEWS
          - meson.build
          - debian/changelog
          - data/*.metainfo.xml.in*

.phosh-format-check:
  image: ${PHOSH_DOCKER_IMAGE}
  needs: []
  variables:
    PHOSH_ADDITIONAL_PKGS: git python3 uncrustify
    GIT_DEPTH: "100"
  script:
    - !reference [.phosh-prepare-apt]
    - |
      git remote add target $CI_MERGE_REQUEST_PROJECT_URL.git
      echo "Fetching MR target branch $CI_MERGE_REQUEST_TARGET_BRANCH_NAME from $CI_MERGE_REQUEST_PROJECT_URL"
      git fetch target "$CI_MERGE_REQUEST_TARGET_BRANCH_NAME"
      merge_base=$(git merge-base "target/$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" HEAD)
      if [ -z "$merge_base" ]; then
        echo "Couldn't determine merge base"
        exit 1
      fi
      echo "Merge base: $merge_base"
      ./.gitlab-ci/check-style.py --dry-run --sha $merge_base
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME'
